// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  jsonapi

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( ManyPayload ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ManyPayload ) UnmarshalJSON([]byte) error { return nil }
func ( ManyPayload ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ManyPayload ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ManyPayload *ManyPayload

func ( Node ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Node ) UnmarshalJSON([]byte) error { return nil }
func ( Node ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Node ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Node *Node

func ( OnePayload ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OnePayload ) UnmarshalJSON([]byte) error { return nil }
func ( OnePayload ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OnePayload ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OnePayload *OnePayload

func ( RelationshipManyNode ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RelationshipManyNode ) UnmarshalJSON([]byte) error { return nil }
func ( RelationshipManyNode ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RelationshipManyNode ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RelationshipManyNode *RelationshipManyNode

func ( RelationshipOneNode ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RelationshipOneNode ) UnmarshalJSON([]byte) error { return nil }
func ( RelationshipOneNode ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RelationshipOneNode ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RelationshipOneNode *RelationshipOneNode
